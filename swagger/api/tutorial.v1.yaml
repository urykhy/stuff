openapi: 3.0.0
info:
  title: tutorial
  version: '1.0'
  contact:
    name: urykhy
    email: urykhy@gmail.com
  x-sentry: true
  x-queue: true
  x-jaeger: true
servers:
  - url: 'http://localhost:3000/api/v1'
paths:
  /test_1/complex_body_response:
    get:
      summary: Test method
      tags:
        - Tutorial
      operationId: get-complex-body
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                task_id:
                  type: string
                cookies:
                  type: array
                  items:
                    type: object
                    properties:
                      key:
                        type: string
                      value:
                        type: array
                        items:
                          type: string
                operation:
                  type: string
            examples: {}
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: array
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        idx:
                          type: string
      description: test 1
    parameters: []
  '/test_2/parameters/{id}.json':
    get:
      summary: Your GET endpoint
      tags:
        - Tutorial
      responses:
        '200':
          description: OK
          content:
            application/octet-stream:
              schema:
                type: object
                properties: {}
          headers:
            response-header-string:
              schema:
                type: string
            response-header-bool:
              schema:
                type: boolean
            response-header-int:
              schema:
                type: integer
      operationId: get-parameters
      parameters:
        - schema:
            type: integer
            minimum: 1
            maximum: 50
            exclusiveMinimum: true
            exclusiveMaximum: true
            multipleOf: 2
          in: header
          name: x-header-int
        - schema:
            type: string
            default: two
            enum:
              - one
              - two
              - three
          in: header
          name: x-header-str-required-enum
          required: true
        - schema:
            type: number
          in: header
          name: x-header-number
        - schema:
            type: boolean
          in: header
          name: x-header-boolean
        - schema:
            type: array
            items:
              type: string
            minItems: 5
            maxItems: 10
            uniqueItems: true
          in: query
          name: idx-array-string
          style: form
          explode: false
        - schema:
            type: string
            minLength: 5
            maxLength: 10
            pattern: '^[a-z]+$'
          in: query
          name: string-required
          required: true
        - $ref: '#/components/parameters/xRefHeader'
      description: test 2
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
  /test_3/response/ref:
    get:
      summary: Your GET endpoint
      tags:
        - Tutorial
      responses:
        '200':
          $ref: '#/components/responses/xRefResponse'
      operationId: get-ref-to-response
      parameters: []
      description: test 3
    parameters: []
  /test_4/image_in_body:
    get:
      summary: Accept svg in body
      tags: []
      responses:
        '200':
          description: OK
      operationId: get-test_4-image_in_body
      requestBody:
        content:
          image/svg+xml:
            schema:
              type: string
components:
  schemas: {}
  parameters:
    xRefHeader:
      name: x-ref-header
      in: header
      required: false
      schema:
        type: string
  responses:
    xRefResponse:
      description: Example response
      content:
        application/json:
          schema:
            type: array
            items:
              type: array
              items:
                type: number
  securitySchemes: {}
tags:
  - name: Tutorial
security: []
