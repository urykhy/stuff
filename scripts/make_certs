#!/bin/bash

set -e
set -x

DAYS="-days 18250"
SUBJ="-subj /C=RU/ST=Moscow/O=Dark"
PARM="$DAYS $SUBJ/OU=Security/CN=elf.dark"
UPARM="$DAYS $SUBJ/OU=Mobile/CN=elf.dark"
SIGN="$DAYS -CA ca.crt -CAkey ca.key -CAcreateserial"
KTYPE="rsa:4096"

CA_PASS="secret"
NORM_PASS="secret1"
MOBILE_PASS="secret2"

# make ca
if [ ! -f ca.crt ]; then
    openssl req -new -newkey $KTYPE -x509 -extensions v3_ca -out ca.crt -keyout ca.key $PARM -passout pass:$CA_PASS
    openssl x509 -text -in ca.crt > ca.txt

    # make CRL
    touch index.txt
    openssl ca -gencrl -config openssl.cnf -days 3650 -keyfile ca.key -cert ca.crt -passin pass:$CA_PASS -out crl.pem
    ln -sfT crl.pem `openssl crl -noout -hash < crl.pem`.r0
fi

if [ ! -f dh2048 ]; then
    openssl dhparam 2048 > dh2048
    openssl dhparam 4096 > dh4096
fi

# make server cert
function make_server_cert {
    USAGE=""
    if [ -n "$2" ]; then
        USAGE="-extfile ./openssl.cnf -extensions $2"
    fi
    if [ ! -f server-$1.crt ]; then
        PARM="$DAYS $SUBJ/OU=Security/CN=$1"
        openssl req  -new -newkey $KTYPE -keyout server-$1.key -out server-$1.csr $PARM -passout pass:$NORM_PASS
        openssl x509 -req -in server-$1.csr $SIGN -out server-$1.crt $USAGE -passin pass:$CA_PASS
        openssl rsa -in server-$1.key -out server-$1.key -passin pass:$NORM_PASS
        openssl x509 -text -in server-$1.crt > server-$1.txt
    fi
}
make_server_cert "mysql.elf.dark"     "mysql"
make_server_cert "nextcloud.elf.dark" "nextcloud"
make_server_cert "ldap.elf.dark"      "ldap"
make_server_cert "mail.dark"
make_server_cert "wifi"
make_server_cert "racoon"
make_server_cert "vpn" "mserver"
make_server_cert "kube" "k8s"
make_server_cert "unbound" "unbound"

function make_client_cert {
    USAGE=""
    if [ -n "$2" ]; then
        USAGE="-extfile ./openssl.cnf -extensions $2"
    fi
    if [ ! -f client-$1.crt ]; then
        UPARM="$DAYS $SUBJ/OU=Mobile/CN=$1"
        openssl req -new -newkey $KTYPE -keyout client-$1.key -out client-$1.csr $UPARM -passout pass:$MOBILE_PASS
        openssl x509 -req -in client-$1.csr $SIGN -out client-$1.crt $USAGE -passin pass:$CA_PASS
        openssl rsa -in client-$1.key -out client-$1.key -passin pass:$MOBILE_PASS
        openssl pkcs12 -export -in client-$1.crt -inkey client-$1.key -certfile ca.crt -name client-$1 -out client-$1.p12 -passin pass:$MOBILE_PASS -passout pass:$MOBILE_PASS
        openssl x509 -text -in client-$1.crt > client-$1.txt
        openssl rsa -in client-$1.key -pubout > client-$1.pub
    fi
}
make_client_cert "wifi"
make_client_cert "racoon"
make_client_cert "ldap"
make_client_cert "vpn" "mclient"
make_client_cert "kube"

rm *.csr || true

