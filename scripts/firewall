#!/bin/sh
# Begin /etc/init.d/

# Include the functions declared in the /etc/init.d/functions file
#
msg="firewall"
ipt="/sbin/iptables"
ip6="/sbin/ip6tables"

case "$1" in
        start)
            echo "Starting $msg"

            # create ipset rules for tor
            ipset create TOR hash:net
            ipset add TOR 195.82.146.0/24 # rutracker, web
            ipset add TOR 209.99.40.227   # booktracker
            ipset add TOR 46.21.250.43    # booktracker
            ipset add TOR 5.79.86.208     # coollib
            ipset add TOR 81.17.19.227    # flibusta
            ipset add TOR 104.24.106.53   # kinozal
            ipset add TOR 104.24.107.53
            ipset add TOR 185.191.239.203 # rutor
            ipset add TOR 46.148.17.250   # zerkalo-rutor.org
            ipset add TOR 46.148.16.85    # free-rutor.org
            ipset add TOR 87.236.16.100   # rutor.pro
            ipset add TOR 185.141.26.93   # tfile
            ipset add TOR 188.42.196.32   # lurkmore.to
            ipset add TOR 81.17.30.22     # nnm-club.me
            ipset add TOR 217.12.204.113  # maxima-library.org
            ipset add TOR 91.90.192.40    # mirknig.ws
            ipset add TOR 80.82.77.83     # sci-hub.io
            ipset add TOR 185.63.144.0/24 # www.slideshare.net
            ipset add TOR 185.63.145.0/24 # www.slideshare.net
            ipset add TOR 185.63.146.0/24 # www.slideshare.net
            ipset add TOR 185.63.147.0/24 # www.slideshare.net
            ipset add TOR 91.225.248.0/24 # ru.linkedin.com
            ipset add TOR 91.225.249.0/24 # ru.linkedin.com
            ipset add TOR 91.225.250.0/24 # ru.linkedin.com
            ipset add TOR 91.225.251.0/24 # ru.linkedin.com
            ipset add TOR 108.174.0.0/20  # linkedin.com
            ipset add TOR 104.31.78.144   # rutor
            ipset add TOR 185.176.192.248 # rutor
            ipset add TOR 91.132.60.14    # rutor

            # privoxy
            ipset create PROXY hash:net
            ipset add PROXY 195.82.146.120 # bt.rutracker
            ipset add PROXY 195.82.146.121 # bt2.rutracker
            ipset add PROXY 195.82.146.122 # bt3.rutracker
            ipset add PROXY 195.82.146.123 # bt4.rutracker
            ipset add PROXY 212.8.244.193   # bt.booktracker.work

            # safe networks
            ipset create LOCALS hash:net
            ipset add LOCALS 192.168.1.0/24 # LAN
            ipset add LOCALS 10.103.10.0/24 # local bridge/qemu
            ipset add LOCALS 10.103.11.0/24 # local wifi ap
            ipset add LOCALS 172.16.0.0/12  # docker

            NFLOG="NFLOG --nflog-group 1 --nflog-size=4096"

            # IPv6 really simple
            $ip6 -A INPUT -m conntrack --ctstate established,related -j ACCEPT
            $ip6 -A INPUT -i lo -j ACCEPT
            $ip6 -A INPUT -m conntrack --ctstate invalid -j REJECT
            $ip6 -A INPUT -i tun* -m conntrack --ctstate new -j REJECT # drop from open vpn networks
            $ip6 -A INPUT -p icmpv6 -j ACCEPT
            # torrent + syncthing
            $ip6 -A INPUT -p udp -m multiport --dports 21027,6771,6881 -j ACCEPT
            $ip6 -A INPUT -p tcp -m multiport --dports 22000,6771,6881 -j ACCEPT
            $ip6 -A INPUT -j $NFLOG --nflog-prefix "ip6"
            $ip6 -P INPUT DROP
            $ip6 -A FORWARD -i tun* -j REJECT # drop from open vpn networks
            $ip6 -P FORWARD ACCEPT

            # IPv4
            # forward
            $ipt -A FORWARD -i tun* -j REJECT # drop from open vpn networks
            $ipt -P FORWARD ACCEPT

            # input
            $ipt -A INPUT -m conntrack --ctstate established,related -j ACCEPT
            $ipt -A INPUT -m conntrack --ctstate invalid -j REJECT
            $ipt -A INPUT -i tun* -m conntrack --ctstate new -j REJECT # drop from open vpn networks
            # allow good local
            $ipt -A INPUT -i lo -j ACCEPT
            $ipt -A INPUT -p icmp -j ACCEPT
            $ipt -A INPUT -m set --match-set LOCALS src -j ACCEPT   # accept from safe networks

            # tcp syn/connections limits
            $ipt -N TCPSYN
            $ipt -A TCPSYN -p tcp -m connlimit --connlimit-above 20 --connlimit-mask 32 -j REJECT
            $ipt -A TCPSYN -m connlimit --connlimit-above 100 --connlimit-mask 24 -j DROP
            $ipt -A TCPSYN -m hashlimit --hashlimit-above 50/second --hashlimit-mode srcip --hashlimit-srcmask 24 --hashlimit-name ddos -j DROP
            $ipt -A TCPSYN -j RETURN
            $ipt -A INPUT  -p tcp --syn -j TCPSYN

            # open for internet
            # syncthing and torrents and i2p
            $ipt -A INPUT -p udp -m multiport --dports 21027,6771,6881,16881 -j ACCEPT
            $ipt -A INPUT -p tcp -m multiport --dports 22000,6771,6881,61089,16881 -j ACCEPT
            #$ipt -A INPUT -p tcp -m multiport --dports 9001,9030 -j ACCEPT # tor
            # drop others
            $ipt -A INPUT -j $NFLOG --nflog-prefix "in"
            $ipt -A INPUT -j REJECT

            # NAT
            # redirects
            $ipt -t nat -A OUTPUT -d 127.192.0.0/10 -p tcp -j DNAT --to-destination 127.0.0.1:9052    # tor
            $ipt -t nat -A OUTPUT -m set --match-set PROXY dst -p tcp -m multiport --dports 80     -j DNAT --to-destination 127.0.0.1:9050 # privoxy
            $ipt -t nat -A OUTPUT -m set --match-set TOR   dst -p tcp -m multiport --dports 80,443 -j DNAT --to-destination 127.0.0.1:9052 # tor
            #$ipt -t nat -A PREROUTING -i br0 -p tcp --dport 80 -j REDIRECT --to-ports 3128

            # redirect to local caddy on 3080 port
            $ipt -t nat -A PREROUTING -p tcp --dport 80  -d 192.168.1.70          -j REDIRECT --to-ports 3080
            $ipt -t nat -A OUTPUT     -p tcp --dport 80  -d 127.0.0.1,10.103.10.3 -j REDIRECT --to-ports 3080 # catch access from localhost
            $ipt -t nat -A PREROUTING -p tcp --dport 443 -d 192.168.1.70          -j REDIRECT --to-ports 3081
            $ipt -t nat -A OUTPUT     -p tcp --dport 443 -d 127.0.0.1,10.103.10.3 -j REDIRECT --to-ports 3081 # catch access from localhost

            #$ipt -t nat -A PREROUTING -i wlan1 -p tcp --dport 81 -j DNAT --to-destination 10.103.10.1:80 # nextcloud

            # masquerade on output interfaces
            #$ipt -t nat -A POSTROUTING -o eth0  -m set ! --match-set LOCALS dst -j MASQUERADE
            $ipt -t nat -A POSTROUTING -o wlan1 -m set ! --match-set LOCALS dst -j MASQUERADE
            #$ipt -t nat -A POSTROUTING -o wlan1 -j MASQUERADE

            # setup conntrack helpers (or only wifi/eth0?)
            $ipt -t raw -A OUTPUT     -p tcp --dport 21 -j CT --helper ftp
            $ipt -t raw -A PREROUTING -p tcp --dport 21 -j CT --helper ftp

            # fix dhcpd "bad udp checksums" errors with lxc
            $ipt -t mangle -A PREROUTING  -i br0 -p udp --dport 67 -j CHECKSUM --checksum-fill
            $ipt -t mangle -A POSTROUTING -o br0 -p udp --sport 67 -j CHECKSUM --checksum-fill

            # marks for traffic shaper
            # lower prio for long-live http transfers
            $ipt -t mangle -A INPUT   -i eth0 -p tcp -m multiport --sports 80,443 -m connmark --mark 0 -m connbytes --connbytes 1024000: --connbytes-dir both --connbytes-mode bytes -j CONNMARK --set-mark 0xa
            $ipt -t mangle -A FORWARD -i eth0 -p tcp -m multiport --sports 80,443 -m connmark --mark 0 -m connbytes --connbytes 1024000: --connbytes-dir both --connbytes-mode bytes -j CONNMARK --set-mark 0xa

            # priority for some traffic
            $ipt -t mangle -A FORWARD -i wlan0 -p udp                     -m connmark --mark 0 -j CONNMARK --set-mark 0xb # skype
            $ipt -t mangle -A OUTPUT -m owner --uid-owner _dnscrypt-proxy -m connmark --mark 0 -j CONNMARK --set-mark 0xc # dns proxy
            $ipt -t mangle -A OUTPUT -m owner --uid-owner debian-tor      -m connmark --mark 0 -j CONNMARK --set-mark 0xb # tor

            ;;

        stop)
            echo "Stopping $msg"
            $ipt -F
            $ipt -t mangle -F
            $ipt -t nat -F
            $ipt -t raw -F
            $ipt -P INPUT ACCEPT
            $ipt -P FORWARD ACCEPT
            $ipt -X TCPSYN
            ipset destroy TOR
            ipset destroy LOCALS
            ipset destroy PROXY

            $ip6 -F
            $ip6 -P INPUT ACCEPT
            $ip6 -P FORWARD ACCEPT
            $ip6 -t raw -F
            ;;

        restart)
            $0 stop
            $0 start
            ;;

        status)
            if [ -n "$2" ]; then
                $ipt -n -t $2 -v -L
            else
                $ipt -n -v -L
            fi
            ;;

        flush)
            $ipt -Z
            $ip6 -Z
            $ipt -t nat -Z
            $ipt -t mangle -Z
            $ipt -t raw -Z
            ;;

        *)
            echo "Usage: $0 {start|stop|flush|restart|status}"
            exit 1
            ;;

esac

# End /etc/init.d/
