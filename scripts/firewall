#!/bin/bash
#

# allow all services for known ips
SAFE_WLAN="-i wlan1 -s 192.168.1.67,192.168.1.69"

# allow everything from local docker/bridge
SAFE_LOCAL="-i br+"

# services open for internet, lan (dhcp, syncthing, torrent)
UNSAFE_TCP="-i wlan1 -p tcp -m multiport --dports 53,22000,6881"
UNSAFE_UDP="-i wlan1 -p udp -m multiport --dports 53,67,68,22000,21027,6881"

# services open for network namespace (dns, tor proxy)
NSPACE_TCP="-i space+ -p tcp -m multiport --dports 53,9052"
NSPACE_UDP="-i space+ -p udp -m multiport --dports 53"
NSPACE_FWD="-i space+ -o wlan1"

# via tor
VIA_TOR=("rutracker.org" "booktracker.org" "flibusta.is" "ru.linkedin.com" "linkedin.com")

VIA_PROXY=("bt.rutracker.org" "bt2.rutracker.org" "bt3.rutracker.org" "bt4.rutracker.org" "bt.booktracker.work")

# disallow any input for this interfaces - this is default action
# UNSAFE_DEVICE=("tun+" "mru" "proton" "cameron")

# Include the functions declared in the /etc/init.d/functions file
#
msg="firewall"
ipt="/sbin/iptables"
ip6="/sbin/ip6tables"

function ipset_start()
{
    # tor
    ipset create -exist TOR hash:net
    for x in ${VIA_TOR[@]};
    do
        for a in `host $x | sed -ne 's/.*has address \(.*\)/\1/p'`;
        do
            echo "add $x as $a"
            ipset add TOR $a
        done
    done

    # protonvpn via tor
    ipset add TOR 103.125.235.18
    ipset add TOR 185.165.241.34
    ipset add TOR 89.38.99.188
    ipset add TOR 138.199.7.240
    ipset add TOR 109.201.133.20
    ipset add TOR 185.177.124.213
    ipset add TOR 37.19.199.134
    ipset add TOR 93.190.141.69
    ipset add TOR 185.177.125.90

    ipset create -exist PROXY hash:net
    for x in ${VIA_PROXY[@]};
    do
        for a in `host $x | sed -ne 's/.*has address \(.*\)/\1/p'`;
        do
            echo "add $x as $a"
            ipset add PROXY $a
        done
    done
}
function ipset_flush()
{
    ipset flush TOR
    ipset flush PROXY
}
function ipset_stop()
{
    ipset destroy TOR
    ipset destroy PROXY
}

case "$1" in
        start)
            echo "Starting $msg"

            ipset_start

            NFLOG="NFLOG --nflog-group 1 --nflog-size=4096"

            # IPv6 really simple
            $ip6 -A INPUT -m conntrack --ctstate established,related -j ACCEPT
            $ip6 -A INPUT -i lo -j ACCEPT
            $ip6 -A INPUT -p icmpv6 -j ACCEPT
            $ip6 -A INPUT -m conntrack --ctstate invalid -j REJECT
            $ip6 -A INPUT -j $NFLOG --nflog-prefix "ip6-input"
            $ip6 -P INPUT DROP
            $ip6 -A FORWARD -j $NFLOG --nflog-prefix "ip6-forward"
            $ip6 -P FORWARD DROP

            # IPv4
            # forward
            $ipt -N F_DROP
            $ipt -A F_DROP -j $NFLOG --nflog-prefix "forward"
            $ipt -A F_DROP -j REJECT

            $ipt -A FORWARD -m conntrack --ctstate established,related -j ACCEPT
            $ipt -A FORWARD -m conntrack --ctstate invalid -j F_DROP
            $ipt -A FORWARD $SAFE_WLAN  -j ACCEPT
            $ipt -A FORWARD $SAFE_LOCAL -j ACCEPT
            $ipt -A FORWARD $NSPACE_FWD -j ACCEPT
            $ipt -A FORWARD -j F_DROP

            # input
            $ipt -N I_DROP
            $ipt -A I_DROP -j $NFLOG --nflog-prefix "input"
            $ipt -A I_DROP -j REJECT

            # tcp syn/connections limits
            $ipt -N TCPSYN
            $ipt -A TCPSYN -p tcp -m connlimit --connlimit-above 20 --connlimit-mask 32 -j REJECT
            $ipt -A TCPSYN -m connlimit --connlimit-above 100 --connlimit-mask 24 -j DROP
            $ipt -A TCPSYN -m hashlimit --hashlimit-above 50/second --hashlimit-mode srcip --hashlimit-srcmask 24 --hashlimit-name ddos -j DROP
            $ipt -A TCPSYN -j RETURN

            # rules
            $ipt -A INPUT -m conntrack --ctstate established,related -j ACCEPT
            $ipt -A INPUT -m conntrack --ctstate invalid -j I_DROP
            $ipt -A INPUT -i lo -j ACCEPT
            $ipt -A INPUT -p icmp -j ACCEPT
            $ipt -A INPUT $SAFE_WLAN   -j ACCEPT
            $ipt -A INPUT $SAFE_LOCAL  -j ACCEPT
            $ipt -A INPUT $NSPACE_TCP  -j ACCEPT
            $ipt -A INPUT $NSPACE_UDP  -j ACCEPT
            $ipt -A INPUT -p tcp --syn -j TCPSYN # tcp limiter
            $ipt -A INPUT $UNSAFE_TCP  -j ACCEPT
            $ipt -A INPUT $UNSAFE_UDP  -j ACCEPT
            $ipt -A INPUT -j I_DROP

            # NAT
            # redirects
            $ipt -t nat -A OUTPUT -d 127.192.0.0/10 -p tcp -j DNAT --to-destination 127.0.0.1:9052 # tor
            $ipt -t nat -A OUTPUT -m set --match-set PROXY dst -p tcp -m multiport --dports 80     -j DNAT --to-destination 127.0.0.1:9050 # privoxy
            $ipt -t nat -A OUTPUT -m set --match-set TOR   dst -p tcp -m multiport --dports 80,443 -j DNAT --to-destination 127.0.0.1:9052 # tor
            #$ipt -t nat -A PREROUTING -i br0 -p tcp --dport 80 -j REDIRECT --to-ports 3128

            # redirect to tor from network namespaces
            $ipt -t nat -A PREROUTING -m set --match-set TOR dst -i space0 -p tcp -j DNAT --to-destination 172.18.1.1:9052 # tor

            # masquerade on output interfaces
            $ipt -t nat -A POSTROUTING -o wlan1 ! -d 192.168.1.0/24 -j MASQUERADE

            # setup conntrack helpers (or only wifi/eth0?)
            $ipt -t raw -A OUTPUT     -p tcp --dport 21 -j CT --helper ftp
            $ipt -t raw -A PREROUTING -p tcp --dport 21 -j CT --helper ftp

            # marks for traffic shaper
            # lower prio for long-live http transfers
            #$ipt -t mangle -A INPUT   -i eth0 -p tcp -m multiport --sports 80,443 -m connmark --mark 0 -m connbytes --connbytes 1024000: --connbytes-dir both --connbytes-mode bytes -j CONNMARK --set-mark 0xa
            #$ipt -t mangle -A FORWARD -i eth0 -p tcp -m multiport --sports 80,443 -m connmark --mark 0 -m connbytes --connbytes 1024000: --connbytes-dir both --connbytes-mode bytes -j CONNMARK --set-mark 0xa

            # priority for some traffic
            #$ipt -t mangle -A FORWARD -i wlan0 -p udp                     -m connmark --mark 0 -j CONNMARK --set-mark 0xb # skype
            #$ipt -t mangle -A OUTPUT -m owner --uid-owner _dnscrypt-proxy -m connmark --mark 0 -j CONNMARK --set-mark 0xc # dns proxy
            #$ipt -t mangle -A OUTPUT -m owner --uid-owner debian-tor      -m connmark --mark 0 -j CONNMARK --set-mark 0xb # tor
            ;;

        stop)
            echo "Stopping $msg"
            $ipt -F
            $ipt -t mangle -F
            $ipt -t nat -F
            $ipt -t raw -F
            $ipt -P INPUT ACCEPT
            $ipt -P FORWARD ACCEPT
            $ipt -X TCPSYN
            $ipt -X F_DROP
            $ipt -X I_DROP

            $ip6 -F
            $ip6 -P INPUT ACCEPT
            $ip6 -P FORWARD ACCEPT
            $ip6 -t raw -F

            sleep 1
            ipset_stop
            ;;

        restart)
            $0 stop
            $0 start
            ;;

        status)
            if [ -n "$2" ]; then
                $ipt -n -t $2 -v -L
            else
                $ipt -n -v -L
            fi
            ;;

        flush)
            $ipt -Z
            $ip6 -Z
            $ipt -t nat -Z
            $ipt -t mangle -Z
            $ipt -t raw -Z
            ;;

        ipset)
            ipset_flush
            sleep 1
            ipset_start
            ;;
        *)
            echo "Usage: $0 {start|stop|flush|restart|status}"
            exit 1
            ;;

esac
